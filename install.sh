#!/bin/bash

# This shell script is generated by ChatGPT
SCRIPT_DIR="$(pwd)"
OS_TYPE=$(uname -s)

USE_NVIM=0
# 检查是否有外部输入，如果有，解析格式为 "USE_NVIM=value" 的输入
if [ -n "$1" ]; then
    input="$1"
    # 使用正则表达式提取值
    if [[ $input =~ ^USE_NVIM=([0-9]+) ]]; then
        USE_NVIM="${BASH_REMATCH[1]}"
    fi
fi

echo "USE_NVIM 的值为: $USE_NVIM"

# Install essential tools based on the Linux distribution
if [ "$OS_TYPE" = "Darwin" ]; then
    # echo "This is macOS"
    printf "\e[92mInstall tools on macOS\e[0m\n"
    xcode-select --install
    /bin/bash -c "$(curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    brew install vim tmux ranger man gdb git readline sdl2 llvm
    # 在这里添加macOS特定的命令
elif [ "$OS_TYPE" = "Linux" ]; then
    if [ -f /etc/os-release ]; then
        source /etc/os-release
        if [ "$ID" = "ubuntu" ]; then
            # Ubuntu
            printf "\e[92mInstall tools on Ubuntu\e[0m\n"
            sudo apt-get update
            sudo apt-get install -y build-essential cmake universal-ctags cscope vim tmux ranger man gcc-doc gdb git libreadline-dev libsdl2-dev llvm llvm-dev llvm-11 llvm-11-dev ufw net-tools htop tree python3 python3-dev curl unzip vnstat python3-distutils python-is-python3 wget
			LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
			curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
			tar xf lazygit.tar.gz lazygit
			sudo install lazygit /usr/local/bin
        elif [ "$ID" = "fedora" ]; then
            # Fedora
            printf "\e[92mInstall tools on Fedora\e[0m\n"
			sudo dnf copr enable atim/lazygit -y
            sudo dnf install -y zsh vim tmux ranger gcc gcc-c++ gdb git readline-devel SDL2-devel llvm llvm-devel lazygit
        elif [ "$ID" = "arch" ]; then
            printf "\e[92mInstall tools on Arch\e[0m\n"
            sudo pacman -S --needed base-devel vim tmux ranger man gdb git readline libsdl2 llvm clang lazygit
        else
            printf "\e[91mFail to recognize this OS!!!\e[0m"
            exit 1
        fi
    else
        printf "\e[91mFail to install tools on this OS!!!\e[0m"
        exit 1
    fi
else
    printf "\e[91mFail to recognize this OS!!!\e[0m"
    exit 1
fi


# Install zimfw for zsh
curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/zimfw/install/master/install.zsh | zsh
ln -s $SCRIPT_DIR/zimrc ~/.zimrc
zimfw install

# Install fish shell and agnoster theme
# curl -L https://get.oh-my.fish | fish
# omf install agnoster
# omf theme agnoster

# Install neovim configuration
if [ "$USE_NVIM" -eq 1 ]; then
    git submodule update --init --recursive
    ln -s $SCRIPT_DIR/nvim ~/.config/nvim
else
# Install vim-plug and YouCompleteMe for Vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://ghproxy.com/https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
ln -s $SCRIPT_DIR/vimrc ~/.vimrc
vim +PlugInstall +qall
# You can also follow the YCM installation instructions separately.
cd ~/.vim/plugged/YouCompleteMe
python3 install.py --clangd-completer --verbose
fi


# Install Tmux and plugins
git clone https://ghproxy.com/https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
bash ~/.tmux/plugins/tpm/bin/install_plugins
ln -s $SCRIPT_DIR/tmux.conf ~/.tmux.conf

# Install ranger plugins
ranger --copy-config=all
echo 'export RANGER_LOAD_DEFAULT_RC=FALSE' >> ~/.zshrc
# config ranger
sed -i 's/set vcs_aware false/set vcs_aware true/' ~/.config/ranger/rc.conf
# sed -i 's/set show_hidden false/set show_hidden true/' ~/.config/ranger/rc.conf
sed -i 's/set preview_images false/set preview_images true/' ~/.config/ranger/rc.conf
# devicons
git clone https://github.com/alexanderjeurissen/ranger_devicons ~/.config/ranger/plugins/ranger_devicons
echo "default_linemode devicons" >> $HOME/.config/ranger/rc.conf
# oscyank
git clone https://github.com/laggardkernel/ranger-oscyank.git ~/.config/ranger/plugins/oscyank
echo 'map yp oscyank path' >> ~/.config/ranger/rc.conf
echo 'map yd oscyank dir' >> ~/.config/ranger/rc.conf
echo 'map yn oscyank name' >> ~/.config/ranger/rc.conf
echo 'map y. oscyank name_without_extension' >> ~/.config/ranger/rc.conf
# ranger-zshz
export ZSHZ_SRC=~/.zim/modules/zsh-z/zsh-z.plugin.zsh
git clone https://ghproxy.com/https://github.com/rc2dev/ranger-zshz.git ~/.config/ranger/plugins/zsh_z
# ranger-tmux
# pip install ranger-tmux
# python -m ranger_tmux install

