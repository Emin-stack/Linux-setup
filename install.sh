#!/bin/bash

# This shell script is generated by ChatGPT
SCRIPT_DIR="$(pwd)"
OS_TYPE=$(uname -s)

USE_NVIM=0
# 检查是否有外部输入，如果有，解析格式为 "USE_NVIM=value" 的输入
if [ -n "$1" ]; then
    input="$1"
    # 使用正则表达式提取值
    if [[ $input =~ ^USE_NVIM=([0-9]+) ]]; then
        USE_NVIM="${BASH_REMATCH[1]}"
    fi
fi

echo "USE_NVIM 的值为: $USE_NVIM"

# Install essential tools based on the Linux distribution
if [ "$OS_TYPE" = "Darwin" ]; then
    # echo "This is macOS"
    printf "\e[92mInstall tools on macOS\e[0m\n"
    xcode-select --install
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    brew install vim tmux ranger man gdb git readline sdl2 llvm
    # 在这里添加macOS特定的命令
elif [ "$OS_TYPE" = "Linux" ]; then
    if [ -f /etc/os-release ]; then
        source /etc/os-release
        if [ "$ID" = "ubuntu" ]; then
            # Ubuntu
            printf "\e[92mInstall tools on Ubuntu\e[0m\n"
            sudo apt-get update
            sudo apt-get install build-essential vim tmux ranger man gcc-doc gdb git libreadline-dev libsdl2-dev llvm llvm-dev llvm-11 llvm-11-dev
        elif [ "$ID" = "fedora" ]; then
            # Fedora
            printf "\e[92mInstall tools on Fedora\e[0m\n"
            sudo dnf install zsh vim tmux ranger gcc gcc-c++ gdb git readline-devel SDL2-devel llvm llvm-devel
        elif [ "$ID" = "arch" ]; then
            printf "\e[92mInstall tools on Arch\e[0m\n"
            sudo pacman -S --needed base-devel vim tmux ranger man gdb git readline libsdl2 llvm clang
        else
            printf "\e[91mFail to recognize this OS!!!\e[0m"
            exit 1
        fi
    else
        printf "\e[91mFail to install tools on this OS!!!\e[0m"
        exit 1
    fi
else
    printf "\e[91mFail to recognize this OS!!!\e[0m"
    exit 1
fi


# Install zimfw for zsh
curl -fsSL https://raw.githubusercontent.com/zimfw/install/master/install.zsh | zsh
ln -s $SCRIPT_DIR/zimrc ~/.zimrc
zimfw install

# Install fish shell and agnoster theme
# curl -L https://get.oh-my.fish | fish
# omf install agnoster
# omf theme agnoster

# Install neovim configuration
if [ "$USE_NVIM" -eq 1 ]; then
    git submodule update --init --recursive
    ln -s $SCRIPT_DIR/nvim ~/.config/nvim
else
# Install vim-plug and YouCompleteMe for Vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
ln -s $SCRIPT_DIR/vimrc ~/.vimrc
vim +PlugInstall +qall
# You can also follow the YCM installation instructions separately.
cd ~/.vim/plugged/YouCompleteMe
python3 install.py --clangd-completer --verbose
fi


# Install Tmux and plugins
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
bash ~/.tmux/plugins/tpm/bin/install_plugins
ln -s $SCRIPT_DIR/tmux.conf ~/.tmux.conf
